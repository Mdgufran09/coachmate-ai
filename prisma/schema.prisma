generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  clerkUserId     String            @unique // Clerk user ID
  email           String            @unique
  name            String?
  imageUrl        String?
  industry        String?  // Combined industry-subindustry (e.g., "tech-software-development")
  industryInsight IndustryInsight? @relation(fields: [industry], references: [industry])
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  // Profile fields
  bio             String?
  experience      Int?              // Years of experience

  // Relations
  skills          String[]          // Array of skills
  assessments     Assessment[]
  resume          Resume?
  coverLetter     CoverLetter[]
}

model Assessment {
  id            String   @id @default(cuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  quizScore     Float
  questions     Json[]   // Array of {question, answer, userAnswer, isCorrect}
  category      String
  improvementTip String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([userId])
}

model Resume {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id])
  content     String   @db.Text
  atsScore    Float?
  feedback    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CoverLetter {
  id              String   @id @default(cuid())
  userId          String
  user            User     @relation(fields: [userId], references: [id])
  content         String
  jobDescription  String?
  companyName     String
  jobTitle        String
  status          String   @default("draft")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([userId])
}

model IndustryInsight {
  id                String   @id @default(cuid())
  industry          String   @unique  // e.g., "tech-software-development"
  users             User[]

  salaryRanges      Json[]   // Array of { role, min, max, median, location? }
  growthRate        Float
  demandLevel       String   // "High", "Medium", "Low"
  topSkills         String[]
  marketOutlook     String   // "Positive", "Neutral", "Negative"
  keyTrends         String[]
  recommendedSkills String[]
  lastUpdated       DateTime @default(now())
  nextUpdate        DateTime

  @@index([industry])
}
